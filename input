final TextEditingController _inputController = TextEditingController();

  Future<void> _writeToFirestore(String userInput) async {
    try {
      // Get a reference to the collection
      CollectionReference dataCollection = FirebaseFirestore.instance.collection('user_input');

      // Add a new document with user input
      await dataCollection.add({'input': userInput});

      // Show a success message (you can customize this based on your needs)
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text('User input added to Firestore: $userInput'),
        ),
      );
    } catch (e) {
      print('Error writing to Firestore: $e');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Firestore Example'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            TextField(
              controller: _inputController,
              decoration: InputDecoration(labelText: 'Enter your input'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                String userInput = _inputController.text.trim();
                if (userInput.isNotEmpty) {
                  _writeToFirestore(userInput);
                  // Clear the text field after writing to Firestore
                  _inputController.clear();
                } else {
                  // Show an error message if the input is empty
                  ScaffoldMessenger.of(context).showSnackBar(
                    SnackBar(
                      content: Text('Please enter a valid input.'),
                    ),
                  );
                }
              },
              child: Text('OK'),
            ),
          ],
        ),
      ),
    );
  }


